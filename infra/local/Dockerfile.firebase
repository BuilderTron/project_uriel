# Multi-stage Dockerfile for Firebase Emulator Suite
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    openjdk11-jre \
    bash \
    curl \
    git

# Install Firebase CLI
RUN npm install -g firebase-tools@latest

# Create app directory
WORKDIR /app

# Stage 2: Production image
FROM base AS production

# Set environment variables
ENV FIREBASE_PROJECT_ID=project-uriel-local
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk
ENV NODE_ENV=development

# Copy Firebase configuration files
COPY firebase.json .firebaserc ./

# Create required directories
RUN mkdir -p .firebase/data backend/functions backend/firestore backend/storage config

# Backend files will be mounted as volumes at runtime
# Create directories for mounted files
RUN mkdir -p backend/functions backend/firestore backend/storage

# Create firebase data directory
RUN mkdir -p .firebase/data

# Set proper permissions
RUN chown -R node:node /app

# Switch to non-root user
USER node

# Expose emulator ports
EXPOSE 4000 5001 8080 9099 9199 9299

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:4000 || exit 1

# Start Firebase emulators with data import/export
CMD ["firebase", "emulators:start", \
     "--project", "demo-project-uriel-local", \
     "--import=./.firebase/data", \
     "--export-on-exit=./.firebase/data"]