rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.admin == true;
    }
    
    // Helper function to check if user owns the document
    function isOwner(uid) {
      return isAuthenticated() && 
             request.auth.uid == uid;
    }
    
    // Helper function to check if field value is unchanged
    function isUnchanged(field) {
      return (field in resource.data) && 
             (field in request.resource.data) && 
             (resource.data[field] == request.resource.data[field]);
    }
    
    // Projects collection - for portfolio showcase
    match /projects/{projectId} {
      // Anyone can read projects (public portfolio)
      allow read: if true;
      
      // Only admin can create, update, delete projects
      allow create, update, delete: if isAdmin();
    }
    
    // Experience collection - for professional timeline
    match /experience/{experienceId} {
      // Anyone can read experience (public portfolio)
      allow read: if true;
      
      // Only admin can create, update, delete experience
      allow create, update, delete: if isAdmin();
    }
    
    // Blog posts collection
    match /blog/{postId} {
      // Anyone can read published blog posts
      allow read: if resource.data.published == true || isAdmin();
      
      // Only admin can create, update, delete blog posts
      allow create, update, delete: if isAdmin();
      
      // Comments subcollection
      match /comments/{commentId} {
        // Anyone can read comments on published posts
        allow read: if true;
        
        // Authenticated users can create comments
        allow create: if isAuthenticated() && 
                      request.resource.data.uid == request.auth.uid &&
                      request.resource.data.timestamp == request.time;
        
        // Users can edit their own comments, admin can edit any
        allow update: if isOwner(resource.data.uid) || isAdmin();
        
        // Users can delete their own comments, admin can delete any
        allow delete: if isOwner(resource.data.uid) || isAdmin();
      }
    }
    
    // Contact messages collection
    match /messages/{messageId} {
      // Only admin can read messages
      allow read: if isAdmin();
      
      // Anyone can create contact messages (public contact form)
      allow create: if request.resource.data.timestamp == request.time;
      
      // Only admin can update/delete messages
      allow update, delete: if isAdmin();
    }
    
    // Admin users collection - for user management
    match /admin/users/{userId} {
      // Only admin can read admin user data
      allow read: if isAdmin();
      
      // Only admin can create, update, delete admin users
      allow create, update, delete: if isAdmin();
    }
    
    // Site configuration collection
    match /config/{configId} {
      // Anyone can read public configuration
      allow read: if true;
      
      // Only admin can update configuration
      allow create, update, delete: if isAdmin();
    }
    
    // Analytics collection - for tracking page views, etc.
    match /analytics/{analyticsId} {
      // Only admin can read analytics
      allow read: if isAdmin();
      
      // Anyone can create analytics entries (for tracking)
      allow create: if true;
      
      // Only admin can update/delete analytics
      allow update, delete: if isAdmin();
    }
    
    // User profiles collection
    match /users/{userId} {
      // Users can read their own profile, admin can read any
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create/update their own profile
      allow create, update: if isOwner(userId);
      
      // Only admin can delete user profiles
      allow delete: if isAdmin();
    }
  }
}