rules_version = '2';

// Helper function to check if the uploaded file is an image and below max size
function isImageBelowMaxSize(maxSizeMB) {
  return request.resource.size < maxSizeMB * 1024 * 1024
      && request.resource.contentType.matches('image/.*');
}

// Helper function to check if user is authenticated
function isAuthenticated() {
  return request.auth != null;
}

// Helper function to check if user is admin
function isAdmin() {
  return isAuthenticated() && 
         request.auth.token.admin == true;
}

// Helper function to check if user owns the path
function isOwner(userId) {
  return isAuthenticated() && 
         request.auth.uid == userId;
}

service firebase.storage {
  match /b/{bucket}/o {
    
    // Public portfolio assets - anyone can read, only admin can write
    match /portfolio/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isImageBelowMaxSize(10);
    }
    
    // Project images - anyone can read, only admin can write
    match /projects/{projectId}/{fileName} {
      allow read: if true;
      allow write: if isAdmin() && isImageBelowMaxSize(5);
    }
    
    // Blog post images - anyone can read, only admin can write
    match /blog/{postId}/{fileName} {
      allow read: if true;
      allow write: if isAdmin() && isImageBelowMaxSize(5);
    }
    
    // User profile pictures - users can manage their own, admin can manage any
    match /users/{userId}/profile/{fileName} {
      allow read: if true;
      allow write: if (isOwner(userId) || isAdmin()) && isImageBelowMaxSize(2);
    }
    
    // User uploads (comments, etc.) - users can manage their own content
    match /users/{userId}/uploads/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId) && isImageBelowMaxSize(5);
    }
    
    // Admin-only assets
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    // Temporary uploads - authenticated users only, 24h TTL
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && isImageBelowMaxSize(10);
    }
    
    // CV/Resume files - public read, admin write
    match /documents/cv/{fileName} {
      allow read: if true;
      allow write: if isAdmin() && 
                   (request.resource.contentType == 'application/pdf' ||
                    request.resource.contentType.matches('application/.*document.*')) &&
                   request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // Fallback - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}